
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Run on Cluster
> # R CMD BATCH /home/mdenny/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/Run_On_Cluster.R > Simulate_Networks_12-11-15.txt &
> 
> ################################################################################
> # 0. Preliminaries -- set working directory, load packages, functions and data #
> ################################################################################
> 
> 
> rm(list = ls())
> 
> # change your working directory to the "Hierarchy_In_Networks" folder location.
> # for me, this is:
> setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks")
> 
> # install and load functions (you will need the devtools pacakge to install two
> # of them, which are necessary for making the pca plots, for example).
> # devtools::install_github("vqv/ggbiplot")
> # install.packages(c("GGally","ineq","corrplot","keyplayer","xtable","igraph","statnet"), dependencies = T)
> require(ggbiplot)
Loading required package: ggbiplot
Loading required package: ggplot2
Loading required package: plyr
Loading required package: scales
Loading required package: grid
> require(igraph)
Loading required package: igraph

Attaching package: ‘igraph’

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

> require(stringr)
Loading required package: stringr

Attaching package: ‘stringr’

The following object is masked from ‘package:igraph’:

    %>%

> require(GGally)
Loading required package: GGally
> require(ineq)
Loading required package: ineq
> require(corrplot)
Loading required package: corrplot
> require(xtable)
Loading required package: xtable
> require(keyplayer)
Loading required package: keyplayer
> 
> # 0.1 -- load in functions which perform the analysis
> 
> # actually calculates hierarchy measures
> source("./Scripts/calculate_analytical_hierarchy_measures.R")
> # scores each measure based on where it places the manager of
> # each of 17 counties in its local hierarchy rankings.
> source("./Scripts/score_leadership_rank.R")
> # general purpose extension to the matplot function
> source("./Scripts/multi_plot.R")
> # wrapper for calculate_analytical_hierarchy_measures(), does so for all networks
> # and organizes data in a format that is nice for further analysis.
> source('./Scripts/generate_hierarchy_dataset.R')
> # calculates descriptive statistics (nodes, density, etc.) for a list of networks
> source('./Scripts/calculate_descriptive_statistics.R')
> # some extra utility function that make plotting easier and collapse datasets
> # over the network_type field.
> source('./Scripts/plotting_utility_functions.R')
> # a wrapper for the pairs() function that makes things look good.
> source('./Scripts/make_pairs_plots.R')
> # a function that runs principle components analysis and generates plots with
> # nice formatting. Optionally returns PCA object for further analysis.
> source('./Scripts/generate_pca_plots.R')
> # generates a sample of networks from the Barabasi-Albert model (prefferential
> # attachment).
> source('./Scripts/generate_barabasi_albert_networks.R')
> # generates a sample of networks from the Erdos-Renyi model (random networks).
> source('./Scripts/generate_erdos_renyi_networks.R')
> # generates a sample of networks from from a deterministic tree model.
> source('./Scripts/generate_tree_networks.R')
> 
> 
> ################################
> ###   Barabasi-Albert Model  ###
> ################################
> 
> # In general we out to expect that with more pref attachement comes more hierarchy
> ba_networks <- generate_barabasi_albert_networks(
+     nodes = c(50,100,150,200,250,300,400,500),
+     samples = 250,
+     seed = 12345,
+     pref_attachment_params = c(0.5,1,2,5,10))
Barabasi-Albert game with: 50 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 100 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 150 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 200 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 250 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 300 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 400 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
Barabasi-Albert game with: 500 nodes...
Current prefferential attachment parameter: 0.5 
Current prefferential attachment parameter: 1 
Current prefferential attachment parameter: 2 
Current prefferential attachment parameter: 5 
Current prefferential attachment parameter: 10 
> 
> # generate local and global hierarchy measures for all networks and output them
> # into a list object
> ba_measures <- generate_hierarchy_dataset(ba_networks)
Calculating hierarchy measures for n-50_p-0.5_s-1 number 1 of 10000 
