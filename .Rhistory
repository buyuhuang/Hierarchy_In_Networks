source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
warnings()
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
warnings()
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
global_measures <- data.frame(matrix(0,
nrow = length(Measures),
ncol = length(Measures[[1]]$global)))
for(i in 1:length(Measures)){
global_measures[i,] <- unlist(Measures[[i]]$global)
}
colnames(global_measures) <- names((Measures[[1]]$global))
rownames(global_measures) <- names(Network_Data)
View(global_measures)
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
global_measures <- data.frame(matrix(0,
nrow = length(Measures),
ncol = length(Measures[[1]]$global)))
for(i in 1:length(Measures)){
global_measures[i,] <- unlist(Measures[[i]]$global)
}
colnames(global_measures) <- names((Measures[[1]]$global))
rownames(global_measures) <- names(Network_Data)
View(global_measures)
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/./Scripts/calculate_analytical_hierarchy_measures.R')
global_measures <- data.frame(matrix(0,
nrow = length(Measures),
ncol = length(Measures[[1]]$global)))
for(i in 1:length(Measures)){
global_measures[i,] <- unlist(Measures[[i]]$global)
}
colnames(global_measures) <- names((Measures[[1]]$global))
rownames(global_measures) <- names(Network_Data)
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
#populate dataframe with global measures
global_measures <- data.frame(matrix(0,
nrow = length(Measures),
ncol = length(Measures[[1]]$global)))
for(i in 1:length(Measures)){
global_measures[i,] <- unlist(Measures[[i]]$global)
}
colnames(global_measures) <- names((Measures[[1]]$global))
rownames(global_measures) <- names(Network_Data)
View(global_measures)
save(global_measures, file = "./Data/global_hierarchy_measures.Rdata")
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F)
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
1:7)
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(1:5,7))
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
measure_scores <- score_leadership_rank(Network_Data = Network_Data,
Measures = Measures)
multi_plot(data = measure_scores,
pdf_name = "Measure_Scores",
output_pdf = F)
load("./Data/global_hierarchy_measures.Rdata")
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendal +
GRC,
scale = TRUE,
center = TRUE))
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE)
install.packages("ggbiplot")
library(ggbiplot)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
load("./Data/global_hierarchy_measures.Rdata")
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE)
pca.g
plot(pca, type = "l")
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
desc_stats <- matrix(0,nrow = length(Network_Data), ncol = 2)
for(i in 1:length(Network_Data)){
desc_stats[i,1] <- sum(Network_Data[[i]]$sociomatrix)
desc_stats[i,2] <- nrow(Network_Data[[i]]$sociomatrix)
}
ave(desc_stats[1:17,1])
ave(desc_stats[1:17,2])
mean(desc_stats[1:17,1])
mean(desc_stats[1:17,2])
mean(desc_stats[18:35,1])
mean(desc_stats[18:35,2])
measure_scores <- score_leadership_rank(
Network_Data = Network_Data[1:17],
Measures = Measures[1:17,1:7])
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#load data
load("./Data/Network_Data.Rdata")
# calculate measures for all networks
Measures <- vector(length = length(Network_Data), mode = "list")
for(i in 1:length(Network_Data)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode
)
}
#populate dataframe with global measures
global_measures <- data.frame(matrix(0,
nrow = length(Measures),
ncol = length(Measures[[1]]$global)))
for(i in 1:length(Measures)){
global_measures[i,] <- unlist(Measures[[i]]$global)
}
colnames(global_measures) <- names((Measures[[1]]$global))
rownames(global_measures) <- names(Network_Data)
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
measure_scores <- score_leadership_rank(
Network_Data = Network_Data[1:17],
Measures = Measures[1:17])
multi_plot(data = measure_scores,
pdf_name = "Measure_Scores",
output_pdf = F)
multi_plot(data = measure_scores,
pdf_name = "Measure_Scores",
output_pdf = F)
measure_scores <- score_leadership_rank(
Network_Data = Network_Data,
Measures = Measures)
devtools::install_github("matthewjdenny/SpeedReader")
library(SpeedReader)
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
multi_plot(data = measure_scores,
pdf_name = "Measure_Scores",
output_pdf = F)
?multi_plot
multi_plot(data = measure_scores,
pdf_name = "Measure_Scores",
output_pdf = F,
plot_columns = c(1:7))
measure_scores
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/score_leadership_rank.R')
measure_scores <- score_leadership_rank(
Network_Data = Network_Data,
Measures = Measures)
View(measure_scores)
multi_plot(data = measure_scores,
pdf_name = "Measure_Scores",
output_pdf = F)
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
#for better plotting
#devtools::install_github("matthewjdenny/SpeedReader")
library(SpeedReader)
#load data
load("./Data/Network_Data.Rdata")
data_list <- generate_hierarchy_dataset(Network_Data)
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/generate_hierarchy_dataset.R')
source('./Scripts/generate_hierarchy_dataset.R')
#for better plotting
#devtools::install_github("matthewjdenny/SpeedReader")
library(SpeedReader)
#load data
load("./Data/Network_Data.Rdata")
data_list <- generate_hierarchy_dataset(Network_Data)
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/generate_hierarchy_dataset.R')
#for better plotting
#devtools::install_github("matthewjdenny/SpeedReader")
library(SpeedReader)
#load data
load("./Data/Network_Data.Rdata")
data_list <- generate_hierarchy_dataset(Network_Data)
str(data_list)
multi_plot(data = data_list$global_measure_dataframe,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
i  =1
sociomatrix <- graph.adjacency(Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode)
igraph::transitivity(sociomatrix, type="weighted")
igraph::transitivity(sociomatrix, type="global")
igraph::graph.density(sociomatrix)
local_statistics <- matrix(0,nrow = length(Network_Data), ncol = 4)
local_statistics[i,1] <- nrow(Network_Data[[i]]$sociomatrix)
local_statistics[i,2] <- sum(Network_Data[[i]]$sociomatrix)
local_statistics[i,3] <- igraph::graph.density(sociomatrix)
local_statistics[i,4] <- igraph::transitivity(sociomatrix, type="global")
local_statistics <- matrix(0,nrow = length(Network_Data), ncol = 4)
for(i in 1:length(Network_Data)){
sociomatrix <- graph.adjacency(Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode)
local_statistics[i,1] <- nrow(Network_Data[[i]]$sociomatrix)
local_statistics[i,2] <- sum(Network_Data[[i]]$sociomatrix)
local_statistics[i,3] <- igraph::graph.density(sociomatrix)
local_statistics[i,4] <- igraph::transitivity(sociomatrix, type="global")
}
View(local_statistics)
rownames(local_statistics) <- names(Network_Data)
colnames(local_statistics) <- c("nodes","edges","density","clustering_coefficient")
network_types <- rep("",length(Network_Data))
local_statistics <- data.frame(local_statistics)
View(local_statistics)
local_statistics <- matrix(0,nrow = length(Network_Data), ncol = 4)
network_types <- rep("",length(Network_Data))
for(i in 1:length(Network_Data)){
sociomatrix <- graph.adjacency(Network_Data[[i]]$sociomatrix,
mode = Network_Data[[i]]$mode)
local_statistics[i,1] <- nrow(Network_Data[[i]]$sociomatrix)
local_statistics[i,2] <- sum(Network_Data[[i]]$sociomatrix)
local_statistics[i,3] <- igraph::graph.density(sociomatrix)
local_statistics[i,4] <- igraph::transitivity(sociomatrix, type="global")
network_types[i] <- Network_Data[[i]]$type
}
rownames(local_statistics) <- names(Network_Data)
colnames(local_statistics) <- c("nodes","edges","density","clustering_coefficient")
local_statistics <- data.frame(local_statistics)
unique_types <- unique(network_types)
unique_types <- unique(network_types)
type_statistics <- matrix(0,nrow = length(unique_types), ncol = 4)
for(i in 1:length(unique_types)){
cur <- local_statistics[which(network_types == unique_types[i]),]
type_statistics[i,] <- colMeans(cur)
}
rownames(type_statistics) <- unique_types
colnames(type_statistics) <- c("nodes","edges","density","clustering_coefficient")
type_statistics <- data.frame(type_statistics)
View(type_statistics)
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/calculate_descriptive_statistics.R')
source('./Scripts/calculate_descriptive_statistics.R')
descriptive_stats <- calculate_descriptive_statistics(Network_Data)
network_descriptive_statistics <- descriptive_stats[[1]]
type_descriptive_statistics <- descriptive_stats[[2]]
View(type_descriptive_statistics)
getwd
getwd()
setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks")
setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks/Data/UCINET Data")
temp <- igraph::read.graph(file = "allattrs960.##d", format = "dl")
temp<- readLines("allattrs960.##d")
warnings()
temp
