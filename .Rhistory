}
type <- types$Type[i]
UCI_Nets[[counter]]$sociomatrix <- current
UCI_Nets[[counter]]$mode <- mode
UCI_Nets[[counter]]$weighted <- weighted
UCI_Nets[[counter]]$type <- type
names(UCI_Nets)[counter] <- name
counter <- counter + 1
}
}
UCI_Nets <- vector(mode = "list", length = length(lookup)-2)
counter <- 1
for(i in 1:length(lookup)){
print(i)
if(i != 28 & i != 15){
current <- read.csv(paste("./Data/CSVs/Networks/",lookup[i],sep = ""),
stringsAsFactors = F,
header = T,
row.names = 1)
current <- as.matrix(current)
if(types$Need_To_Reverse[i] != ""){
current <- (max(current) + 1) - current
}
name <- stringr::str_split(lookup[i],"\\.")[[1]][1]
name <- stringr::str_replace_all(name," ", "_")
mode <- "directed"
if(isSymmetric.matrix(current)){
mode <- "undirected"
}
weighted <- TRUE
if(length(unique(current)) < 3){
weighted <- FALSE
}
type <- types$Type[i]
UCI_Nets[[counter]]$sociomatrix <- current
UCI_Nets[[counter]]$mode <- mode
UCI_Nets[[counter]]$weighted <- weighted
UCI_Nets[[counter]]$type <- type
names(UCI_Nets)[counter] <- name
counter <- counter + 1
}
}
Network_Data <- append(Network_Data,UCI_Nets)
save(Network_Data,file = "./Data/Network_Data.Rdata")
rm(list = ls())
# change your working directory to the "Hierarchy_In_Networks" folder location.
# for me, this is:
setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks")
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
source('./Scripts/generate_hierarchy_dataset.R')
source('./Scripts/calculate_descriptive_statistics.R')
library(SpeedReader)
load("./Data/Network_Data.Rdata")
data_list <- generate_hierarchy_dataset(Network_Data)
test <- Network_Data[[100]]
test2<- test[[1]]
View(test2)
test2 <- matrix(as.numeric(test2),nrow(test2),ncol(test2))
View(test2)
Network_Data[[100]]$sociomatrix <- test2
data_list <- generate_hierarchy_dataset(Network_Data)
global_measures <- data_list$global_measure_dataframe
save(global_measures, file = "./Data/global_hierarchy_measures.Rdata")
multi_plot(data = data_list$global_measure_dataframe,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
View(global_measures)
multi_plot(data = data_list$global_measure_dataframe,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
View(global_measures)
which(row.names(global_measures) == "mb031s01nets2")
#deal with one other weird network
global_measures <- global_measures[-100,]
save(global_measures, file = "./Data/global_hierarchy_measures.Rdata")
multi_plot(data = data_list$global_measure_dataframe[-100,],
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
load("./Data/global_hierarchy_measures.Rdata")
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE)
library(ggbiplot)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE)
pca.g
multi_plot(data = data_list$global_measure_dataframe[-100,],
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
which(row.names(global_measures) == "drugnet")
global_measures <- global_measures[-which(row.names(global_measures) == "drugnet"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Terro_4275"),]
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
global_measures <- global_measures[-which(row.names(global_measures) == "drug_net_61"),]
View(global_measures)
global_measures <- global_measures[-which(row.names(global_measures) == "Koster_data8"),]
save(global_measures, file = "./Data/global_hierarchy_measures.Rdata")
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
global_measures <- global_measures[-which(row.names(global_measures) == "CITES"),]
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
global_measures <- data_list$global_measure_dataframe
#deal with weird networks
global_measures <- global_measures[-100,]
global_measures <- global_measures[-which(row.names(global_measures) == "drugnet"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Terro_4275"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drug_net_61"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Koster_data8"),]
View(global_measures)
global_measures <- global_measures[-which(row.names(global_measures) == "CITIES"),]
View(global_measures)
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
global_measures <- data_list$global_measure_dataframe
which(row.names(global_measures) == "CITIES")
Network_Data[[52]]$type <- "interaction"
save(Network_Data,file = "./Data/Network_Data.Rdata")
global_measures <- data_list$global_measure_dataframe
#deal with weird networks
global_measures <- global_measures[-100,]
global_measures <- global_measures[-which(row.names(global_measures) == "drugnet"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Terro_4275"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drug_net_61"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Koster_data8"),]
global_measures <- global_measures[-which(row.names(global_measures) == "CITIES"),]
save(global_measures, file = "./Data/global_hierarchy_measures.Rdata")
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE)
pca.g
?ggbiplot
plot(pca, type = "l")
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/pca.R')
library(ggbiplot)
library(devtools)
load("./Data/global_hierarchy_measures.Rdata")
# updated to new
# pca <- with(global_measures, prcomp(~degree_centralization + closeness_centralization +
#                 betweenness_centralization + eigenvector_centralization,
#               scale = TRUE,
#               center = TRUE))
# pca with all measures except D_root which was mostly NA.
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
hold=matrix(nrow=length(Network_Data),ncol=2)
for(i in 1:length(Network_Data)){
hold[i,]=c(names(Network_Data)[i],Network_Data[[i]]$type)
}
facts=as.factor(hold[-c(100,52,54,128,53,78),2])
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
rm(list = ls())
# change your working directory to the "Hierarchy_In_Networks" folder location.
# for me, this is:
setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks")
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
source('./Scripts/generate_hierarchy_dataset.R')
source('./Scripts/calculate_descriptive_statistics.R')
# for better plotting you can try this
# devtools::install_github("matthewjdenny/SpeedReader")
# library(SpeedReader)
#load data
load("./Data/Network_Data.Rdata")
data_list <- generate_hierarchy_dataset(Network_Data)
global_measures <- data_list$global_measure_dataframe
View(global_measures)
View(global_measures)
network_type <- rep("",nrow(global_measures))
for(i in 1:length(network_type)){
network_type[i] <- Network_Data[[i]]$type
}
network_type <- rep("",nrow(global_measures))
network_name <- names(Network_Data)
for(i in 1:length(network_type)){
network_type[i] <- Network_Data[[i]]$type
}
global_measures <- data.frame(cbind(global_measures,
network_type,
network_name),
stringsAsFactors = F)
View(global_measures)
plot(pca, type = "l")
facts=as.factor(global_measures$network_type)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
facts=as.factor(global_measures$network_type)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
source('~/Dropbox/SoDA_502/Hierarchy_In_Networks/Scripts/generate_hierarchy_dataset.R')
rm(list = ls())
# change your working directory to the "Hierarchy_In_Networks" folder location.
# for me, this is:
setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks")
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
source("./Scripts/score_leadership_rank.R")
source("./Scripts/multi_plot.R")
source('./Scripts/generate_hierarchy_dataset.R')
source('./Scripts/calculate_descriptive_statistics.R')
# for better plotting you can try this
# devtools::install_github("matthewjdenny/SpeedReader")
# library(SpeedReader)
#load data
load("./Data/Network_Data.Rdata")
data_list <- generate_hierarchy_dataset(Network_Data)
global_measures <- data_list$global_measure_dataframe
row.names(global_measures)[100]
global_measures <- data_list$global_measure_dataframe
#deal with weird networks
global_measures <- global_measures[-which(row.names(global_measures) == "mb031s01nets2"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drugnet"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Terro_4275"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drug_net_61"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Koster_data8"),]
global_measures <- global_measures[-which(row.names(global_measures) == "CITIES"),]
save(global_measures, file = "./Data/global_hierarchy_measures.Rdata")
multi_plot(data = global_measures,
pdf_name = "Global_Measures",
output_pdf = F,
c(2:5,7))
multi_plot(data = data_list$leadership_ranking_scores,
pdf_name = "Measure_Scores",
output_pdf = F)
descriptive_stats <- calculate_descriptive_statistics(Network_Data)
network_descriptive_statistics <- descriptive_stats[[1]]
type_descriptive_statistics <- descriptive_stats[[2]]
load("./Data/global_hierarchy_measures.Rdata")
# pca with all measures except D_root which was mostly NA.
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
facts=as.factor(global_measures$network_type)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
global_measures <- global_measures[-which(row.names(global_measures) == "County_16"),]
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
facts=as.factor(global_measures$network_type)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
unclass(facts)
pca.g$data$xvar
global_measures$network_name[35]
global_measures <- data_list$global_measure_dataframe
#deal with weird networks
global_measures <- global_measures[-which(row.names(global_measures) == "mb031s01nets2"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drugnet"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Terro_4275"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drug_net_61"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Koster_data8"),]
global_measures <- global_measures[-which(row.names(global_measures) == "CITIES"),]
global_measures <- global_measures[-which(row.names(global_measures) == "AOM_division_comembership"),]
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
facts=as.factor(global_measures$network_type)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
pca.g$data$xvar
options(scipen=999)
pca.g$data$xvar
global_measures$network_name[53]
global_measures <- data_list$global_measure_dataframe
#deal with weird networks
global_measures <- global_measures[-which(row.names(global_measures) == "mb031s01nets2"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drugnet"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Terro_4275"),]
global_measures <- global_measures[-which(row.names(global_measures) == "drug_net_61"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Koster_data8"),]
global_measures <- global_measures[-which(row.names(global_measures) == "CITIES"),]
global_measures <- global_measures[-which(row.names(global_measures) == "AOM_division_comembership"),]
global_measures <- global_measures[-which(row.names(global_measures) == "Freeman's_EIES3"),]
pca <- with(global_measures, prcomp(~degree_centralization +
closeness_centralization +
betweenness_centralization +
eigenvector_centralization +
landau +
kendall +
GRC,
scale = TRUE,
center = TRUE))
plot(pca, type = "l")
facts=as.factor(global_measures$network_type)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = c("black","yellow","red","orange","green","blue",
"violetred4","maroon1","tan2")[unclass(facts)])
pca.g
unclass(facts)
levels(facts)
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = levels(facts)[unclass(facts)])
pca.g
?ggbiplot
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = levels(facts)[unclass(facts)],
pch = 15:24)
pca.g
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = levels(facts)[unclass(facts)],
shape =facts)
pca.g
pca.g <- ggbiplot(pca, choices = c(1,2),
obs.scale = 1,
var.scale = 1,
ellipse = TRUE,
circle = TRUE,
groups = levels(facts)[unclass(facts)])+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
pca.g
plot(pca,
type = "l",
pch = 19)
plot(pca,
type = "l",
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
ggplot(pca,
type = "l",
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
plot(y = (pca$sdev)^2,
x = 1:length(pca$sdev)
type = "l",
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
plot(y = (pca$sdev)^2,
x = 1:length(pca$sdev),
type = "l",
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
plot(y = (pca$sdev)^2,
x = 1:length(pca$sdev),
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
ggplot(y = (pca$sdev)^2,
x = 1:length(pca$sdev),
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
components <- cbind(y = (pca$sdev)^2,
x = 1:length(pca$sdev))
plot(components
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
plot(components,
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
components <- cbind(x = 1:length(pca$sdev),
y = (pca$sdev)^2)
plot(components,
pch = 19,
ylab = "Variances",
xlab = "Component",
main = "Principle Component Variances")
