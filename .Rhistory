load("~/Dropbox/PINLab/Papers/Cross_County_Analysis/Data/Weighted_Sociomatrix_List.Rdata")
for(i in 1:17){
Sociomatrix_List[[i]]$gender <- NULL
}
new_names <- paste("County_",1:17,sep = "")
names(Sociomatrix_List) <- new_names
for(i in 1:17){
Sociomatrix_List[[i]]$department <- NULL
}
departments <- c("Emergency",
"Health",
"IT",
"Manager",
"HR",
"Library",
"Plan/Dev",
"Deeds",
"Parks/Rec",
"Finance",
"Soc_Serv",
"Veterans",
"Util/Waste",
"Elections",
"Sheriff",
"Info",
"Tax",
"Inspections",
"Animal",
"Maintenance",
"Seniors",
"Transport",
"Environment",
"Misc",
"Extension"
)
i = 1
department <- departments[Sociomatrix_List[[i]]$dept_cluster]
department
for(i in 1:17){
department <- departments[Sociomatrix_List[[i]]$dept_cluster]
Sociomatrix_List[[i]]$department <- department
Sociomatrix_List[[i]]$dept_cluster <- NULL
}
Manager_Email_Networks <- Sociomatrix_List
setwd("~/Dropbox/SoDA_502/Hierarchy_In_Networks/Data")
save(Manager_Email_Networks, file = "Manager_Email_Networks.Rdata")
setwd("..")
library(igraph)
global <- list()
sociomatrix <- Sociomatrix_List[[1]]$sociomatrix
global <- list()
global$degree_centralization <- centralization.degree (sociomatrix, mode = "all")
global$closeness_centralization <- centralization.closeness (sociomatrix, mode = "all")
global$betweenness_centralization <-  centralization.betweenness (sociomatrix, directed = TRUE)
global$eigenvector_centralization <- centralization.evcent (sociomatrix, directed = TRUE)
mode = "directed"
sociomatrix <- graph.adjacency(sociomatrix, mode = mode)
global <- list()
global$degree_centralization <- centralization.degree (sociomatrix, mode = "all")
global$closeness_centralization <- centralization.closeness (sociomatrix, mode = "all")
global$betweenness_centralization <-  centralization.betweenness (sociomatrix, directed = TRUE)
global$eigenvector_centralization <- centralization.evcent (sociomatrix, directed = TRUE)
global <- list()
global$degree_centralization <- centralization.degree (sociomatrix, mode = "all")$centralization
global$closeness_centralization <- centralization.closeness (sociomatrix, mode = "all")$centralization
global$betweenness_centralization <-  centralization.betweenness (sociomatrix, directed = TRUE)$centralization
global$eigenvector_centralization <- centralization.evcent (sociomatrix, directed = TRUE)$centralization
local <- list()
local$degree_centrality <- centralization.degree (sociomatrix, mode = "all")$res
local$closeness_centrality <- centralization.closeness (sociomatrix, mode = "all")$res
local$betweenness_centrality <-  centralization.betweenness (sociomatrix, directed = TRUE)$res
local$eigenvector_centrality <- centralization.evcent (sociomatrix, directed = TRUE)$res
entralization.evcent (sociomatrix, directed = TRUE)
centralization.evcent (sociomatrix, directed = TRUE)$
res
centralization.evcent (sociomatrix, directed = TRUE)
global <- list()
global$degree_centralization <- centralization.degree (sociomatrix, mode = "all")$centralization
global$closeness_centralization <- centralization.closeness (sociomatrix, mode = "all")$centralization
global$betweenness_centralization <-  centralization.betweenness (sociomatrix, directed = TRUE)$centralization
global$eigenvector_centralization <- centralization.evcent (sociomatrix, directed = TRUE)$centralization
local <- list()
local$degree_centrality <- centralization.degree (sociomatrix, mode = "all")$res
local$closeness_centrality <- centralization.closeness (sociomatrix, mode = "all")$res
local$betweenness_centrality <-  centralization.betweenness (sociomatrix, directed = TRUE)$res
local$eigenvector_centrality <- centralization.evcent (sociomatrix, directed = TRUE)$vector
local <- list()
local$degree_centrality$score <- centralization.degree (sociomatrix, mode = "all")$res
order(local$degree_centrality$score)
order(local$degree_centrality$score, decreasing = T)
global <- list()
global$degree_centralization <- centralization.degree (sociomatrix, mode = "all")$centralization
global$closeness_centralization <- centralization.closeness (sociomatrix, mode = "all")$centralization
global$betweenness_centralization <-  centralization.betweenness (sociomatrix, directed = TRUE)$centralization
global$eigenvector_centralization <- centralization.evcent (sociomatrix, directed = TRUE)$centralization
local <- list()
local$degree_centrality$score <- centralization.degree (sociomatrix, mode = "all")$res
local$degree_centrality$rank <- order(local$degree_centrality$score, decreasing = T)
local$closeness_centrality$score <- centralization.closeness (sociomatrix, mode = "all")$res
local$closeness_centrality$rank <- order(local$closeness_centrality$score, decreasing = T)
local$betweenness_centrality$score <-  centralization.betweenness (sociomatrix, directed = TRUE)$res
local$betweenness_centrality$rank <- order(local$betweenness_centrality$score, decreasing = T)
local$eigenvector_centrality$score <- centralization.evcent (sociomatrix, directed = TRUE)$vector
local$eigenvector_centrality$rank <- order(local$eigenvector_centrality$score, decreasing = T)
return_list <- list(global = global, local = local)
for(i in 1:17){
Manager_Email_Networks[[i]]$mode = "directed"
}
setwd("./Data")
save(Manager_Email_Networks, file = "Manager_Email_Networks.Rdata")
rm(list = ls())
setwd("./Data")
load("Manager_Email_Networks.Rdata")
setwd("..")
#preliminaries
rm(list = ls())
#load in functions
source("./Scripts/calculate_analytical_hierarchy_measures.R")
#load data
load("./Data/Manager_Email_Networks.Rdata")
Measures <- vector(length = length(Manager_Email_Networks), mode = "list")
for(i in 1:length(Manager_Email_Networks)){
print(i)
Measures[[i]] <- calculate_analytical_hierarhy_measures(
sociomatrix = Manager_Email_Networks[[i]]$sociomatrix,
mode = Manager_Email_Networks[[i]]$mode
)
}
load("~/Dropbox/Research/Senate_Influence/Data/Optimal_Influence_Networks_Final.Rdata")
